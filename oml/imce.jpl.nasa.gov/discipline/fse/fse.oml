annotationProperty fse:hasProvenance=<http://imce.jpl.nasa.gov/discipline/fse/fse#hasProvenance>

@dc:description="""The Flight System Electrical Ontology defines concepts and properties for flight system electrical engineering."""
@dc:rights="""Copyright 2010-2017, by the California Institute of Technology. ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged. Any commercial use must be negotiated with the Office of Technology Transfer at the California Institute of Technology.

This software may be subject to U.S. export control laws. By accepting this software, the user agrees to comply with all applicable U.S. export laws and regulations. User has the responsibility to obtain export licenses,a or other export authority as may be required before exporting such information to foreign countries or providing access to foreign persons."""
@dc:date="""$Date$"""
@owl:versionInfo="""$Revision$"""
@dc:title="""Flight System Electrical Ontology"""
@dc:type="""Discipline"""
@dc:creator="""California Institute of Technology Jet Propulsion Laboratory"""
open terminology <http://imce.jpl.nasa.gov/discipline/fse/fse> {

	extends <http://imce.jpl.nasa.gov/foundation/project/project>

	@rdfs:label="""End Circuit Presenting Element"""
	aspect EndCircuitPresentingElement

	@rdfs:label="""Reference Designated Element"""
	aspect ReferenceDesignatedElement

	@dc:description="""A physical Component that presents electrical interfaces"""
	@rdfs:label="""Assembly"""
	concept Assembly

	@dc:description="""References the design drawing that implements a Function"""
	@rdfs:label="""Drawing"""
	concept Drawing

	@dc:description="""Represents an inner electrical resource as an Interface"""
	@rdfs:label="""End Circuit"""
	concept EndCircuit

	@dc:description="""A grouping of EndCircuits that have common properties"""
	@rdfs:label="""End Circuit Group"""
	concept EndCircuitGroup

	@rdfs:label="""Engineering Change Request"""
	concept EngineeringChangeRequest

	@dc:description="""Am electrical Function represents a requirement to join some Interfaces, specifically to conduct a signal"""
	@rdfs:label="""Function"""
	concept Function

	@rdfs:label="""Function Annotation"""
	concept FunctionAnnotation

	@dc:description=""" same as project:suppliedBy ? """
	@rdfs:label="""Implementer"""
	concept Implementer

	@dc:description="""An Assembly-to-Assembly logical signal path"""
	@rdfs:label="""Net"""
	concept Net

	@rdfs:label="""Mass Constraint"""
	concept MassConstraint

	@rdfs:label="""CBE Mass Constraint"""
	concept CBEMassConstraint

	@rdfs:label="""MGA Mass Constraint"""
	concept MGAMassConstraint

	@rdfs:label="""Mass Allocation Constraint"""
	concept MassAllocationConstraint

	@rdfs:label="""Mass Limit Constraint"""
	concept MassLimitConstraint

	@rdfs:label="""Mass Reserve Constraint"""
	concept MassReserveConstraint

	@rdfs:label="""Placeholder Mass"""
	concept PlaceholderMass

	@rdfs:label="""Consumable Mass"""
	concept ConsumableMass

	@dc:description="""A physical conductor segment. A Net may be implemented by one or more Wires"""
	@rdfs:label="""Wire"""
	concept Wire

	@rdfs:label="""Power Switch Bank"""
	concept PowerSwitchBank

	@dc:description="""An aggregation of Components supplied by a common work package authority."""
	@rdfs:label="""Subsystem"""
	concept Subsystem

	@dc:description="""Some electrical switches can be ganged to switch a larger current. A GengConfiguration composes a set of switches into a new logical switch."""
	@rdfs:label="""GangConfiguration"""
	concept GangConfiguration

	@rdfs:label="""Telemetry"""
	concept Telemetry

	Assembly extendsConcept mission:Component

	Drawing extendsConcept project:Product

	EndCircuit extendsConcept mission:Interface

	EndCircuitGroup extendsConcept mission:Interface

	EngineeringChangeRequest extendsConcept analysis:Characterization

	Function extendsConcept mission:Junction

	FunctionAnnotation extendsConcept analysis:Characterization

	Implementer extendsConcept analysis:Characterization

	MassConstraint extendsConcept analysis:Characterization

	CBEMassConstraint extendsConcept MassConstraint

	MGAMassConstraint extendsConcept MassConstraint

	MassAllocationConstraint extendsConcept MassConstraint

	MassLimitConstraint extendsConcept MassConstraint

	MassReserveConstraint extendsConcept MassConstraint

	Net extendsConcept mission:Junction

	PlaceholderMass extendsConcept mission:Component

	ConsumableMass extendsConcept mission:Component

	Wire extendsConcept mission:Junction

	PowerSwitchBank extendsConcept EndCircuitGroup

	Subsystem extendsConcept mission:Component

	GangConfiguration extendsConcept analysis:Explanation

	Telemetry extendsConcept mission:Flow

	@oml:hasPropertyLabel="""connects assembly"""
	@oml:hasReificationLabel="""Connects Assembly"""
	reifiedRelationship ConnectsAssembly {
		asymmetric
		irreflexive
		unreified = connectsAssembly
		source = Function
		target = Assembly }

	@oml:hasPropertyLabel="""connects assembly 1"""
	@oml:hasReificationLabel="""Connects Assembly1"""
	reifiedRelationship ConnectsAssembly1 {
		asymmetric
		irreflexive
		unreified = connectsAssembly1
		source = Function
		target = Assembly }

	@oml:hasPropertyLabel="""connects assembly 2"""
	@oml:hasReificationLabel="""Connects Assembly2"""
	reifiedRelationship ConnectsAssembly2 {
		asymmetric
		irreflexive
		unreified = connectsAssembly2
		source = Function
		target = Assembly }

	@oml:hasPropertyLabel="""connects subsystem"""
	@oml:hasReificationLabel="""Connects Subsystem"""
	reifiedRelationship ConnectsSubsystem {
		asymmetric
		irreflexive
		unreified = connectsSubsystem
		source = Function
		target = Subsystem }

	@oml:hasPropertyLabel="""connects subsystem 1"""
	@oml:hasReificationLabel=""""""
	reifiedRelationship ConnectsSubsystem1 {
		functional
		asymmetric
		irreflexive
		unreified = connectsSubsystem1
		source = Function
		target = Subsystem }

	@oml:hasPropertyLabel="""connects subsystem 2"""
	@oml:hasReificationLabel="""Connects Subsystem 1"""
	reifiedRelationship ConnectsSubsystem2 {
		functional
		asymmetric
		irreflexive
		unreified = connectsSubsystem2
		source = Function
		target = Subsystem }

	@oml:hasPropertyLabel="""has gang member"""
	@oml:hasReificationLabel="""Has Gang Member"""
	reifiedRelationship HasGangMember {
		inverseFunctional
		asymmetric
		irreflexive
		unreified = hasGangMember
		inverse = isMemberOfGang
		source = GangConfiguration
		target = EndCircuit }

	@oml:hasPropertyLabel="""has gang aggregate"""
	@oml:hasReificationLabel="""Has Gang Aggregate"""
	reifiedRelationship HasGangAggregate {
		functional
		inverseFunctional
		asymmetric
		irreflexive
		unreified = hasGangAggregate
		inverse = isAggregateOfGang
		source = GangConfiguration
		target = EndCircuit }

	@oml:hasPropertyLabel="""implements"""
	@oml:hasReificationLabel="""Implements"""
	reifiedRelationship Implements {
		functional
		asymmetric
		irreflexive
		unreified = implements
		inverse = isImplementedBy
		source = mission:Junction
		target = mission:Junction }

	@oml:hasPropertyLabel="""implements net"""
	@oml:hasReificationLabel="""ImplementsNet"""
	reifiedRelationship ImplementsNet {
		functional
		asymmetric
		irreflexive
		unreified = implementsNet
		source = Wire
		target = Net }

	@oml:hasPropertyLabel="""implements function"""
	@oml:hasReificationLabel="""ImplementsFunction"""
	reifiedRelationship ImplementsFunction {
		functional
		asymmetric
		irreflexive
		unreified = implementsFunction
		source = Net
		target = Function }

	rule gangMemberFromAggregate infers mission:joins if
		Function && mission:joins && isAggregateOfGang && hasGangMember

	rule gangAggregateFromMember infers mission:joins if
		Function && mission:joins && isMemberOfGang && hasGangAggregate

	ConnectsAssembly1 extendsRelationship ConnectsAssembly

	ConnectsAssembly2 extendsRelationship ConnectsAssembly

	ConnectsSubsystem1 extendsRelationship ConnectsSubsystem

	ConnectsSubsystem2 extendsRelationship ConnectsSubsystem

	HasGangMember extendsRelationship analysis:Analyzes

	HasGangAggregate extendsRelationship analysis:Explains

	ImplementsNet extendsRelationship Implements

	ImplementsFunction extendsRelationship Implements

	Assembly extendsAspect EndCircuitPresentingElement

	Assembly extendsAspect ReferenceDesignatedElement

	EndCircuitGroup extendsAspect EndCircuitPresentingElement

	EndCircuitPresentingElement extendsAspect mission:PresentingElement

	ReferenceDesignatedElement extendsAspect base:IdentifiedElement

	Subsystem extendsAspect ReferenceDesignatedElement

	ConnectsAssembly extendsAspect analysis:AnalyzedElement

	ConnectsAssembly extendsAspect analysis:CharacterizedElement

	ConnectsSubsystem extendsAspect analysis:AnalyzedElement

	ConnectsSubsystem extendsAspect analysis:CharacterizedElement

	HasGangMember extendsAspect analysis:AnalyzedElement

	HasGangMember extendsAspect analysis:CharacterizedElement

	HasGangAggregate extendsAspect analysis:AnalyzedElement

	HasGangAggregate extendsAspect analysis:CharacterizedElement

	Implements extendsAspect analysis:AnalyzedElement

	Implements extendsAspect analysis:CharacterizedElement

	scalarOneOfRestriction endCircuitDirection {
		restrictedRange XMLSchema:string
	}

	scalarOneOfRestriction functionDirection {
		restrictedRange XMLSchema:string
	}

	scalarOneOfRestriction provenance {
		restrictedRange XMLSchema:string
	}

	oneOf endCircuitDirection = """in""" ^^ XMLSchema:string

	oneOf endCircuitDirection = """inout""" ^^ XMLSchema:string

	oneOf endCircuitDirection = """out""" ^^ XMLSchema:string

	oneOf functionDirection = """1to2""" ^^ XMLSchema:string

	oneOf functionDirection = """2to1""" ^^ XMLSchema:string

	oneOf functionDirection = """Bidirectional""" ^^ XMLSchema:string

	oneOf functionDirection = """Undefined""" ^^ XMLSchema:string

	oneOf provenance = """baseline""" ^^ XMLSchema:string

	oneOf provenance = """proposed""" ^^ XMLSchema:string

	oneOf provenance = """retracted""" ^^ XMLSchema:string

	@rdfs:label="""has assembly acronym"""
	entityScalarDataProperty + hasAssemblyAcronym {
		domain Assembly
		range XMLSchema:string
	}

	@rdfs:label="""has assembly reference designator"""
	entityScalarDataProperty + hasAssemblyReferenceDesignator {
		domain Assembly
		range XMLSchema:string
	}

	@rdfs:label="""has cognizant engineer"""
	entityScalarDataProperty + hasCogE {
		domain Assembly
		range XMLSchema:string
	}

	@rdfs:label="""has end circuit direction"""
	entityScalarDataProperty + hasEndCircuitDirection {
		domain EndCircuit
		range endCircuitDirection
	}

	@rdfs:label="""has annotation key"""
	entityScalarDataProperty + hasAnnotationKey {
		domain FunctionAnnotation
		range XMLSchema:string
	}

	@rdfs:label="""has annotation value"""
	entityScalarDataProperty + hasAnnotationValue {
		domain FunctionAnnotation
		range XMLSchema:string
	}

	@rdfs:label="""has end circuit identifier"""
	entityScalarDataProperty + hasEndCircuitIdentifier {
		domain EndCircuit
		range XMLSchema:string
	}

	@rdfs:label="""has end circuit local name"""
	entityScalarDataProperty + hasEndCircuitLocalName {
		domain EndCircuit
		range XMLSchema:string
	}

	@rdfs:label="""has assembly 1 board schematic signal names"""
	entityScalarDataProperty + hasAssembly1BoardSchematicSignalNames {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has assembly 2 board schematic signal names"""
	entityScalarDataProperty + hasAssembly2BoardSchematicSignalNames {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has comments"""
	entityScalarDataProperty + hasComments {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has end circuit type"""
	entityScalarDataProperty + hasEndCircuitType {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has end circuit named role 1"""
	entityScalarDataProperty + hasEndCircuitNamedRole1 {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has end circuit named role 2"""
	entityScalarDataProperty + hasEndCircuitNamedRole2 {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has function direction"""
	entityScalarDataProperty + hasFunctionDirection {
		domain Function
		range functionDirection
	}

	@rdfs:label="""has function number"""
	entityScalarDataProperty + hasFunctionNumber {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has functions per page"""
	entityScalarDataProperty + hasFunctionsPerPage {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""names connector 1"""
	entityScalarDataProperty + namesConnector1 {
		domain Function
		range XMLSchema:string
	}


	@rdfs:label="""names connector 2"""
	entityScalarDataProperty + namesConnector2 {
		domain Function
		range XMLSchema:string
	}


	@rdfs:label="""names cavity 1"""
	entityScalarDataProperty + namesCavity1 {
		domain Function
		range XMLSchema:string
	}


	@rdfs:label="""names cavity 2"""
	entityScalarDataProperty + namesCavity2 {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has channel name"""
	entityScalarDataProperty + hasChannelName {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has cross-strapped"""
	entityScalarDataProperty + hasCrossStrapped {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has end connector 1 type/part number"""
	entityScalarDataProperty + hasEndConnector1TypePartNumber {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has end connector 2 type/part number"""
	entityScalarDataProperty + hasEndConnector2TypePartNumber {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has conductor count"""
	entityScalarDataProperty + hasConductorCount {
		domain Function
		range XMLSchema:integer
	}

	@rdfs:label="""has end circuit 1 part number"""
	entityScalarDataProperty + hasEndCircuit1PartNumber {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has end circuit 2 part number"""
	entityScalarDataProperty + hasEndCircuit2PartNumber {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has ground tree ref 1"""
	entityScalarDataProperty + hasGroundTreeRef1 {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has ground tree ref 2"""
	entityScalarDataProperty + hasGroundTreeRef2 {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has note 1"""
	entityScalarDataProperty + hasNote1 {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has note 2"""
	entityScalarDataProperty + hasNote2 {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has note 3"""
	entityScalarDataProperty + hasNote3 {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has note 4"""
	entityScalarDataProperty + hasNote4 {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has note 5"""
	entityScalarDataProperty + hasNote5 {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has note 6"""
	entityScalarDataProperty + hasNote6 {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has function rev"""
	entityScalarDataProperty + hasFunctionRev {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has view 1"""
	entityScalarDataProperty + hasView1 {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has view 2"""
	entityScalarDataProperty + hasView2 {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has view 3"""
	entityScalarDataProperty + hasView3 {
		domain Function
		range XMLSchema:string
	}

	@rdfs:label="""has reference designator"""
	entityScalarDataProperty + hasReferenceDesignator {
		domain ReferenceDesignatedElement
		range XMLSchema:string
	}

	@rdfs:label="""has subsystem acronym"""
	entityScalarDataProperty + hasSubsystemAcronym {
		domain Subsystem
		range XMLSchema:string
	}

	@rdfs:label="""has subsystem number"""
	entityScalarDataProperty + hasSubsystemNumber {
		domain Subsystem
		range XMLSchema:string
	}

	@rdfs:label="""has subsystem reference designator"""
	entityScalarDataProperty + hasSubsystemReferenceDesignator {
		domain Subsystem
		range XMLSchema:string
	}

	@rdfs:label="""has switch bank identifer"""
	entityScalarDataProperty + hasSwitchBankIdentifier {
		domain PowerSwitchBank
		range XMLSchema:string
	}

	@rdfs:label="""has switch bank local name"""
	entityScalarDataProperty + hasSwitchBankLocalName {
		domain PowerSwitchBank
		range XMLSchema:string
	}

	@rdfs:label="""has ECR identifier"""
	entityScalarDataProperty + hasEcrIdentifier {
		domain EngineeringChangeRequest
		range XMLSchema:string
	}

	@rdfs:label="""has drawing number"""
	entityScalarDataProperty + hasDrawingNumber {
		domain Drawing
		range XMLSchema:string
	}

	@rdfs:label="""has net index"""
	entityScalarDataProperty + hasNetIndex {
		domain Net
		range XMLSchema:integer
	}

	@rdfs:label="""has wire code"""
	entityScalarDataProperty + hasWireCode {
		domain Net
		range XMLSchema:string
	}

	@rdfs:label="""has wire gauge"""
	entityScalarDataProperty + hasWireGauge {
		domain Net
		range XMLSchema:string
	}

	@rdfs:label="""has wire treatment"""
	entityScalarDataProperty + hasWireTreatment {
		domain Net
		range XMLSchema:string
	}

	@rdfs:label="""has cable treatment"""
	entityScalarDataProperty + hasCableTreatment {
		domain Net
		range XMLSchema:string
	}

	@rdfs:label="""has cable impedance"""
	entityScalarDataProperty + hasCableImpedance {
		domain Net
		range iso-80000-6:ohm
	}

	@rdfs:label="""has cable length (m)"""
	entityScalarDataProperty + hasCableLength {
		domain Net
		range iso-80000-3:metre
	}

	@rdfs:label="""has mass constraint value"""
	entityScalarDataProperty + hasMassConstraintValue {
		domain MassConstraint
		range iso-80000-4:kilogram
	}

	@rdfs:label="""has device identifer"""
	entityScalarDataProperty + hasDeviceIdentifier {
		domain Telemetry
		range XMLSchema:string
	}

	@rdfs:label="""has telemetry type"""
	entityScalarDataProperty + hasTelemetryType {
		domain Telemetry
		range XMLSchema:string
	}

	@rdfs:label="""has channel identifier"""
	entityScalarDataProperty + hasChannelIdentifier {
		domain Telemetry
		range XMLSchema:string
	}

	allEntities Assembly . base:isAggregatedIn in Subsystem

	allEntities Drawing . project:describes in Function

	allEntities EndCircuit . mission:isJoinedIn in Function

	allEntities EndCircuit . mission:isPresentedBy in EndCircuitPresentingElement

	allEntities EndCircuitGroup . mission:isPresentedBy in Assembly

	allEntities EndCircuitGroup . mission:presents in EndCircuit

	allEntities EngineeringChangeRequest . analysis:characterizes in Function

	allEntities Function . mission:joins in EndCircuit

	allEntities Implementer . analysis:characterizes in Function

	allEntities FunctionAnnotation . analysis:characterizes in Function

	allEntities Subsystem . base:aggregates in Assembly

	allEntities MassConstraint . analysis:characterizes in mission:Component

	hasAnnotationKey subDataPropertyOf base:hasAlternateName

	hasAnnotationValue subDataPropertyOf base:hasDescription

	hasEndCircuitLocalName subDataPropertyOf base:hasAlternateName

	hasSwitchBankLocalName subDataPropertyOf base:hasAlternateName

	hasAssemblyAcronym subDataPropertyOf base:hasIdentifier

	hasDrawingNumber subDataPropertyOf base:hasIdentifier

	hasEcrIdentifier subDataPropertyOf base:hasIdentifier

	hasEndCircuitIdentifier subDataPropertyOf base:hasIdentifier

	hasFunctionNumber subDataPropertyOf base:hasIdentifier

	hasReferenceDesignator subDataPropertyOf base:hasIdentifier

	hasSubsystemAcronym subDataPropertyOf base:hasIdentifier

	hasSubsystemNumber subDataPropertyOf base:hasIdentifier

	hasSwitchBankIdentifier subDataPropertyOf base:hasIdentifier

	hasAssemblyReferenceDesignator subDataPropertyOf hasReferenceDesignator

	hasSubsystemReferenceDesignator subDataPropertyOf hasReferenceDesignator

}
